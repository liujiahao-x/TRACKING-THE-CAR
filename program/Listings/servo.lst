C51 COMPILER V9.57.0.0   SERVO                                                             10/11/2020 18:20:34 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SERVO
OBJECT MODULE PLACED IN .\Objects\servo.obj
COMPILER INVOKED BY: D:\keil5 c51 install\install_0\C51\BIN\C51.EXE servo.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Headfile) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\servo.lst) TABS(2) OBJECT(.\Objects\servo.obj)

line level    source

   1          #include "main.h"
   2          #include "delay.h"
   3          #include "servo.h"
   4          #include "sensor.h"
   5          
   6          #define SERVOLEFTON           SetLeftServo()
   7          #define SERVOLEFTOFF          ResetLeftServo()
   8          #define SERVORIGHTON          SetRightServo()
   9          #define SERVORIGHTOFF         ResetRightServo()
  10          
  11          int BEARDTIME = 0;
  12          
  13          int ServoLeft(int left_speed)     
  14          { 
  15   1        SERVOLEFTON;
  16   1        delay_nus(1400+left_speed);
  17   1        SERVOLEFTOFF;
  18   1        delay_nms(20);        //20ms
  19   1        return 0;
  20   1      }
  21          
  22          int ServoRight(int right_speed)     
  23          { 
  24   1        SERVORIGHTON;
  25   1        delay_nus(1500-right_speed);
  26   1        SERVORIGHTOFF;
  27   1        delay_nms(20);        //20ms
  28   1        return 0;
  29   1      }
  30          
  31          int ServoMove(int servo_left_speed,int servo_right_speed)
  32          { 
  33   1        #if 1
  34   1        SERVOLEFTON;
  35   1        delay_nus(1400-servo_left_speed);
  36   1        SERVOLEFTOFF;
  37   1        SERVORIGHTON;
  38   1        delay_nus(1500+servo_right_speed);
  39   1        SERVORIGHTOFF;
  40   1        delay_nms(20);
  41   1        #endif
  42   1      //  ServoLeft(servo_left_speed);
  43   1      //  ServoRight(servo_right_speed);
  44   1        return 0;
  45   1      }
  46          
  47          void SetLeftServo(void)
  48          {
  49   1        P1 |= (1<<0);
  50   1      }
  51          
  52          void ResetLeftServo(void)
  53          {
  54   1        P1 &= ~(1<<0);
C51 COMPILER V9.57.0.0   SERVO                                                             10/11/2020 18:20:34 PAGE 2   

  55   1      }
  56          
  57          void SetRightServo(void)
  58          {
  59   1        P1 |= (1<<1);     //P1.1 = 1
  60   1      }
  61          
  62          void ResetRightServo(void)
  63          {
  64   1        P1 &= ~(1<<1);      //P1.1 = 0
  65   1      }
  66          
  67          
  68          void ServoMoveFollowLine(void)
  69          {
  70   1          
  71   1          int  irDetectLeft,irDetectRight;
  72   1          SetGreenLed;
  73   1          ResetRedLed;
  74   1          IRLaunch('R');                                //右边发射
  75   1          irDetectRight = ReadRightSensor();              //右边接收
  76   1          IRLaunch('L');                                //左边发射
  77   1          irDetectLeft = ReadLeftSensor();                //左边接收
  78   1          printf("ReadLeftSensor = %d                        ReadRightSensor= %d\n",irDetectLeft,irDetectRight);
  79   1      //    if((irDetectLeft==0)&&(irDetectRight==0))       { ServoMove(200,200); }           //IR传感器
  80   1      //    else if((irDetectLeft==0)&&(irDetectRight==1))  { ServoMove(200,-100); }          //turn right
  81   1      //    else if((irDetectLeft==1)&&(irDetectRight==0))  { ServoMove(-100,200); }          //turn left       
  82   1      //    else  {  ServoMove(-100,200);}                                                      //
  83   1        
  84   1          if((irDetectLeft==1)&&(irDetectRight==1))       { ServoMove(250,250); }           //光电管
  85   1          else if((irDetectLeft==1)&&(irDetectRight==0))  { ServoMove(250,-200); }          //turn right
  86   1          else if((irDetectLeft==0)&&(irDetectRight==1))  { ServoMove(-200,250); }          //turn left       
  87   1          else  {  ServoMove(-250,250);}                                                      //
  88   1      } 
  89          
  90          void test_sesor(void)
  91          {
  92   1          int  irDetectLeft,irDetectRight;
  93   1          IRLaunch('R');                                //右边发射
  94   1          irDetectRight = ReadRightSensor();              //右边接收
  95   1          IRLaunch('L');                                //左边发射
  96   1          irDetectLeft = ReadLeftSensor();                //左边接收
  97   1          printf("ReadLeftSensor = %d                        ReadRightSensor= %d\n",irDetectLeft,irDetectRight);    
             -                                          //
  98   1      } 
  99          
 100          void ServoMoveFollowBeard(void)
 101          {
 102   1        int BeardDetectLeft,BeardDetectRight;
 103   1        BeardDetectLeft = ReadLeftBeard();
 104   1        BeardDetectRight = ReadRightBeard();
 105   1        if((BeardDetectLeft == 0)||BeardDetectRight==0){ BEARDTIME++; }
 106   1        if(1 == BEARDTIME){ServoMove(0,200);delay_nms(500);}
 107   1        if(2 == BEARDTIME){ServoMove(200,0);delay_nms(500);}
 108   1      }
 109          
 110          
 111          void bread_touch_1(int a,int b)
 112          {
 113   1          
 114   1          int i=0;
 115   1          if((a == 0)||b == 0)
C51 COMPILER V9.57.0.0   SERVO                                                             10/11/2020 18:20:34 PAGE 3   

 116   1          {
 117   2            if(!BEARDTIME)
 118   2            {
 119   3            ResetGreenLed;
 120   3            SetRedLed;
 121   3            for(i = 0;i<26;i++){ ServoMove(-250,250); }
 122   3            BEARDTIME++;
 123   3            ResetRedLed;
 124   3            ResetGreenLed;
 125   3            ServoMove(1,1);
 126   3            delay_nms(1000);
 127   3            delay_nms(1000);
 128   3            delay_nms(1000);
 129   3            delay_nms(1000);
 130   3            delay_nms(1000);  
 131   3            }
 132   2          } 
 133   1      }
 134              
 135          void bread_touch_2(int a,int b)
 136          {
 137   1          
 138   1          int j=0;
 139   1          if((a == 0)||b ==0 )
 140   1          {
 141   2            if(BEARDTIME)
 142   2            {
 143   3            ResetGreenLed;
 144   3            SetRedLed;
 145   3            for(j = 0;j<26;j++){ ServoMove(250,-250); }
 146   3            BEARDTIME=0;
 147   3            ServoMove(1,1);
 148   3            ResetRedLed;
 149   3            ResetGreenLed;
 150   3            delay_nms(1000);
 151   3            delay_nms(1000);
 152   3            delay_nms(1000);
 153   3            delay_nms(1000);
 154   3            delay_nms(1000);  
 155   3            BEARDTIME++;
 156   3          }
 157   2        }
 158   1      }
 159          
 160          void bread_touch_3(int a,int b)
 161          {
 162   1          
 163   1          if((a == 0)||b ==0 )
 164   1          {
 165   2            if(BEARDTIME==2)
 166   2            {
 167   3              ResetGreenLed;
 168   3              ResetRedLed;
 169   3              ServoMove(1,1);
 170   3              BEARDTIME=0;  
 171   3              while(1){;}
 172   3          }
 173   2        }
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.57.0.0   SERVO                                                             10/11/2020 18:20:34 PAGE 4   

   CODE SIZE        =    668    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
